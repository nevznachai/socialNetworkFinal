{"version":3,"file":"static/js/780.f86440b7.chunk.js","mappings":"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","sources":["webpack://my-project-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-project-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://my-project-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthNavigate.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__erwYW\",\"posts\":\"MyPosts_posts__ehxlw\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Fzr4t\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={s.posts}>\r\n        <div className={s.item}>\r\n          <img src='https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Anonymous.svg/1481px-Anonymous.svg.png' />\r\n          {props.message}\r\n        </div>\r\n        <div>\r\n          <span>like</span>\r\n          {props.likesCount}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../Common/FormsControls/FormsControls';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n  // console.log('render')\r\n\r\n  let postsElement = [...props.posts].reverse().map((p) => <Post key={p.id} message={p.message} likesCount={p.likesCount} />)\r\n\r\n\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  }\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <div>\r\n        <AddNewPostReduxForm onSubmit={onAddPost} />\r\n      </div>\r\n      <div className={s.posts}>\r\n        {postsElement}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n)\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name={'newPostText'} validate={[required, maxLength10]} placeholder={'post something'} />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n        <button>Delete</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nlet AddNewPostReduxForm = reduxForm({ form: 'ProfileAddPostForm' })(AddNewPostForm);\r\n\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"itemBack\":\"ProfileInfo_itemBack__EyzgQ\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__zuBLA\",\"mainPhoto\":\"ProfileInfo_mainPhoto__qjayM\",\"contact\":\"ProfileInfo_contact__pCTAD\"};","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <b>Status:</b> <span onDoubleClick={activateEditMode}>{props.status || \"----\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus onChange={onStatusChange} onBlur={deactivateEditMode} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\"\r\nimport { reduxForm } from \"redux-form\";\r\nimport { createField, Input, Textarea } from \"../../Common/FormsControls/FormsControls\";\r\nimport s from './ProfileInfo.module.css';\r\nimport styles from '../../Common/FormsControls/FormsControls.module.css';\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button>save</button></div>\r\n        {error && <div className={styles.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full Name\", \"fullName\", Input, [])}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", Input, [], { type: \"checkbox\" })}\r\n        </div>\r\n        <div>\r\n            <b>My Prof. Skills</b>: {createField(\"My Prof. Skills\", \"lookingForAJobDescription\", Textarea, [])}\r\n        </div>\r\n        <div>\r\n            <b>About Me</b>: {createField(\"About Me\", \"aboutMe\", Textarea, [])}\r\n        </div>\r\n        <div>\r\n      <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n        return <div key={key} className={s.contact}>\r\n            <b>{key} : {createField(key, \"contacts.\" + key, Input, [])}  </b>\r\n        </div>\r\n      })}\r\n    </div>\r\n    </form>\r\n}\r\n\r\n// const ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm)\r\nconst ProfileDataFormReduxForm = reduxForm({ form: \"edit-profile\", enableReinitialize: true, destroyOnUnmount: false })(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, { useState } from 'react';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../../assets/images/userpic.png';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(\r\n      () => {\r\n        setEditMode(false);\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* <img src={'https://s5s6c2i4.stackpathcdn.com/wp-content/uploads/2021/08/img_testata_pag_beach_villa-1.jpg'} className={s.itemBack} /> */}\r\n      <div className={s.descriptionBlock}>\r\n        < img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n        {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n\r\n        {editMode\r\n          ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n          : <ProfileData goToEditMode={() => { setEditMode(true) }} profile={profile} isOwner={isOwner} />}\r\n\r\n\r\n\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return <div>\r\n    {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n    <div>\r\n      <b>Full name</b>: {profile.fullName}\r\n    </div>\r\n    <div>\r\n      <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n    </div>\r\n    {\r\n      profile.lookingForAJob &&\r\n      <div>\r\n        <b>My Prof. Skills</b>: {profile.lookingForAJobDescription}\r\n      </div>\r\n    }\r\n    <div>\r\n      <b>About Me</b>: {profile.aboutMe}\r\n    </div>\r\n    <div>\r\n      <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n        return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n      })}\r\n    </div>\r\n  </div>\r\n}\r\n\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return <div className={s.contact}><b>{contactTitle}</b>: {contactValue} </div>\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo savePhoto={props.savePhoto}\r\n        isOwner={props.isOwner}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        saveProfile={props.saveProfile}\r\n        updateStatus={props.updateStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from \"../../redux/profile-reducer\";\r\nimport { Navigate, useLocation, useNavigate, useParams } from 'react-router-dom';\r\nimport { withAuthNavigate } from '../../hoc/withAuthNavigate';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n   refreshProfile() {\r\n      let userId = this.props.router.params.userId;\r\n      if (!userId) {\r\n         userId = this.props.authorizedUserId;\r\n      }\r\n      if (!userId) {\r\n         this.props.navigate('/login');\r\n      }\r\n      this.props.getUserProfile(userId);\r\n      this.props.getStatus(userId)\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.refreshProfile();\r\n   }\r\n\r\n   componentDidUpdate(prevProps) {\r\n      if (this.props.router.params.userId != prevProps.router.params.userId) {\r\n         this.refreshProfile();\r\n      }\r\n   }\r\n\r\n   // componentDidUpdate(prevProps) {\r\n   //    let userId = this.props.router.params.userId;\r\n   //    if (prevProps.router.params.userId !== userId) {\r\n   //       userId = this.props.authorizedUserId;\r\n   //    }\r\n   //    this.props.getUserProfile(userId);\r\n   //    this.props.getStatus(userId)\r\n   // }\r\n\r\n   render() {\r\n      return (\r\n         <Profile {...this.props}\r\n            isOwner={!this.props.router.params.userId}\r\n            profile={this.props.profile}\r\n            status={this.props.status}\r\n            updateStatus={this.props.updateStatus}\r\n            savePhoto={this.props.savePhoto} />\r\n      )\r\n   }\r\n}\r\n\r\nexport const withNavigate = (Component) => {\r\n   let RedirectTo = (props) => {\r\n      return < Component {...props} navigate={useNavigate()} />\r\n   }\r\n   return RedirectTo;\r\n}\r\n\r\n\r\nfunction withRouter(Component) {\r\n   function ComponentWithRouterProp(props) {\r\n      let location = useLocation();\r\n      let navigate = useNavigate();\r\n      let params = useParams();\r\n      return (\r\n         <Component\r\n            {...props}\r\n            router={{ location, navigate, params }}\r\n         />\r\n      );\r\n   }\r\n\r\n   return ComponentWithRouterProp;\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n   profile: state.profilePage.profile,\r\n   status: state.profilePage.status,\r\n   authorizedUserId: state.auth.userId,\r\n   isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default compose(connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }), withNavigate, withRouter, withAuthNavigate)(ProfileContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\n\r\nlet mapStateToPropsForNavigate = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthNavigate = (Component) => {\r\n    class NavigateComponent extends React.Component {\r\n        render() {\r\n            // if (!this.props.isAuth) return <Navigate to={'/login'} />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n\r\n\r\n    let ConnectedAuthNavigateComponent = connect(mapStateToPropsForNavigate)(NavigateComponent)\r\n\r\n    return ConnectedAuthNavigateComponent;\r\n}"],"names":["props","className","s","src","message","likesCount","MyPosts","React","postsElement","posts","reverse","map","p","id","AddNewPostReduxForm","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","connect","state","profilePage","dispatch","addPostActionCreator","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","enableReinitialize","destroyOnUnmount","profile","error","styles","createField","Input","type","Object","keys","contacts","key","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","savePhoto","saveProfile","Preloader","photos","large","userPhoto","target","files","length","initialValues","formData","then","ProfileContainer","userId","this","router","params","authorizedUserId","navigate","getUserProfile","getStatus","refreshProfile","prevProps","withNavigate","Component","useNavigate","compose","auth","isAuth","location","useLocation","useParams","withAuthNavigate","mapStateToPropsForNavigate","NavigateComponent"],"sourceRoot":""}