{"version":3,"file":"static/js/547.6cfe1d3e.chunk.js","mappings":"8NACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,yB,SCkBlN,EAdmB,SAACA,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,gBAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAS,UACtC,iBAAKD,UAAWC,EAAAA,OAAS,WACrB,gBAAKC,IAAI,iEACT,SAAC,KAAO,CAACC,GAAIL,EAAK,SAAED,EAAMO,WAK1C,ECFA,EAVgB,SAACP,GACb,OACI,0BACI,gBAAKG,UAAWC,EAAAA,OAAS,SACpBJ,EAAMQ,WAIvB,E,uCCSA,GAAeC,EAAAA,EAAAA,GAAW,CAAEC,KAAM,wBAAlC,EAhBuB,SAACV,GAEpB,IAAMW,GAAcC,EAAAA,EAAAA,GAAiB,IAErC,OACI,kBAAMC,SAAUb,EAAMc,aAAa,WAC/B,0BACI,SAACC,EAAA,EAAK,CAACC,UAAWC,EAAAA,GAAUV,KAAM,iBAAkBW,SAAU,CAACC,EAAAA,EAAUR,GAAcS,YAAa,0BAExG,0BACI,yCAIhB,ICiBA,EA5BgB,SAACpB,GAEb,IAAIqB,EAAQrB,EAAMsB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAACC,GAAC,OAAK,SAAC,EAAU,CAACnB,KAAMmB,EAAEnB,KAAiBL,GAAIwB,EAAExB,IAAZwB,EAAExB,GAAgB,IAC5FyB,EAAmBN,EAAMO,SAASH,KAAI,SAACI,GAAC,OAAK,SAAC,EAAO,CAACrB,QAASqB,EAAErB,SAAcqB,EAAE3B,GAAM,IAO3F,OACI,iBAAKC,UAAWC,EAAAA,QAAU,WACtB,gBAAKD,UAAWC,EAAAA,aAAe,SAC1BmB,KAEL,iBAAKpB,UAAWC,EAAAA,QAAU,WACtB,yBAAMuB,KACN,SAAC,EAAc,CAACd,SAXR,SAACiB,GACpB9B,EAAM+B,YAAYD,EAAOE,eAC1B,SAcJ,ECXA,GAAeC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,KAdD,SAACb,GACnB,MAAO,CACHC,YAAaD,EAAMC,YAE3B,IAEyB,SAACa,GACtB,MAAO,CACHJ,YAAa,SAACC,GACVG,GAASC,EAAAA,EAAAA,GAAmBJ,GAChC,EAER,IAEqEK,EAAAA,EAArE,CAAuFC,E,wIChBnFC,EAA6B,SAAClB,GAAK,MAAM,CACzCmB,OAAQnB,EAAMoB,KAAKD,OACtB,EAEYH,EAAmB,SAACK,GAAe,IACtCC,EAAiB,qGAKlB,OALkB,8BACnB,WAGI,OAAO,SAACD,GAAS,UAAKE,KAAK5C,OAC/B,KAAC,EALkB,CAAS6C,EAAAA,WAYhC,OAFqCX,EAAAA,EAAAA,IAAQK,EAARL,CAAoCS,EAG7E,C","sources":["webpack://my-project-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessagesForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthNavigate.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oOCzo\",\"dialogsItems\":\"Dialogs_dialogsItems__yDZcj\",\"active\":\"Dialogs_active__dX3n3\",\"messages\":\"Dialogs_messages__uDUMT\",\"message\":\"Dialogs_message__cS1W2\",\"avatar\":\"Dialogs_avatar__53QKQ\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <div className={s.avatar}>\r\n                <img src='https://cs14.pikabu.ru/avatars/3984/x3984095-1602008823.png' />\r\n                <NavLink to={path}>{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={s.dialog}>\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n\r\n","import { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../Common/FormsControls/FormsControls\";\r\n\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n    const maxLength50 = maxLengthCreator(50);\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={'newMessageBody'} validate={[required, maxLength50]} placeholder={'Enter your message'} />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm ({ form: 'dialogAddMessageForm' })(AddMessageForm);","import React from 'react';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\nimport AddMessageForm from './AddMessageForm/AddMessagesForm';\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map((d) => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElements = state.messages.map((m) => <Message message={m.message} key={m.id} />);\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n     props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.message}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageForm onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthNavigate } from '../../hoc/withAuthNavigate';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthNavigate)(Dialogs);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\n\r\nlet mapStateToPropsForNavigate = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthNavigate = (Component) => {\r\n    class NavigateComponent extends React.Component {\r\n        render() {\r\n            // if (!this.props.isAuth) return <Navigate to={'/login'} />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n\r\n\r\n    let ConnectedAuthNavigateComponent = connect(mapStateToPropsForNavigate)(NavigateComponent)\r\n\r\n    return ConnectedAuthNavigateComponent;\r\n}"],"names":["props","path","id","className","s","src","to","name","message","reduxForm","form","maxLength50","maxLengthCreator","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthNavigate","Dialogs","mapStateToPropsForNavigate","isAuth","auth","Component","NavigateComponent","this","React"],"sourceRoot":""}