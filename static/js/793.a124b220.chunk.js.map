{"version":3,"file":"static/js/793.a124b220.chunk.js","mappings":"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","sources":["webpack://my-project-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-project-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://my-project-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthNavigate.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__erwYW\",\"posts\":\"MyPosts_posts__ehxlw\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Fzr4t\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={s.posts}>\r\n        <div className={s.item}>\r\n          <img src='https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Anonymous.svg/1481px-Anonymous.svg.png' />\r\n          {props.message}\r\n        </div>\r\n        <div>\r\n          <span>like</span>\r\n          {props.likesCount}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../Common/FormsControls/FormsControls';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n  // console.log('render')\r\n\r\n  let postsElement = [...props.posts].reverse().map((p) => <Post message={p.message} likesCount={p.likesCount} />)\r\n\r\n\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  }\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <div>\r\n        <AddNewPostReduxForm onSubmit={onAddPost} />\r\n      </div>\r\n      <div className={s.posts}>\r\n        {postsElement}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n)\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name={'newPostText'} validate={[required, maxLength10]} placeholder={'post something'} />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n        <button>Delete</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nlet AddNewPostReduxForm = reduxForm({ form: 'ProfileAddPostForm' })(AddNewPostForm);\r\n\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"itemBack\":\"ProfileInfo_itemBack__EyzgQ\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__zuBLA\",\"mainPhoto\":\"ProfileInfo_mainPhoto__qjayM\"};","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\nconst activateEditMode = () => {\r\n    setEditMode(true);\r\n}\r\n\r\nconst deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n}\r\n\r\nconst onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n}\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"----\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus onChange={onStatusChange}  onBlur={deactivateEditMode} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../../assets/images/userpic.png';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto }) => {\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if(e.target.files.length) {\r\n      savePhoto (e.target.files[0]);\r\n}\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* <img src={'https://s5s6c2i4.stackpathcdn.com/wp-content/uploads/2021/08/img_testata_pag_beach_villa-1.jpg'} className={s.itemBack} /> */}\r\n      <div className={s.descriptionBlock}>\r\n        < img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n        {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo savePhoto={props.savePhoto}\r\n        isOwner={props.isOwner}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto } from \"../../redux/profile-reducer\";\r\nimport { Navigate, useLocation, useNavigate, useParams } from 'react-router-dom';\r\nimport { withAuthNavigate } from '../../hoc/withAuthNavigate';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n   refreshProfile() {\r\n      let userId = this.props.router.params.userId;\r\n      if (!userId) {\r\n         userId = this.props.authorizedUserId;\r\n      }\r\n      if (!userId) {\r\n         this.props.navigate('/login');\r\n      }\r\n      this.props.getUserProfile(userId);\r\n      this.props.getStatus(userId)\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.refreshProfile();\r\n   }\r\n\r\n   componentDidUpdate(prevProps) {\r\n      if (this.props.router.params.userId != prevProps.router.params.userId) {\r\n         this.refreshProfile();\r\n      }\r\n   }\r\n\r\n   // componentDidUpdate(prevProps) {\r\n   //    let userId = this.props.router.params.userId;\r\n   //    if (prevProps.router.params.userId !== userId) {\r\n   //       userId = this.props.authorizedUserId;\r\n   //    }\r\n   //    this.props.getUserProfile(userId);\r\n   //    this.props.getStatus(userId)\r\n   // }\r\n\r\n   render() {\r\n      return (\r\n         <Profile {...this.props}\r\n            isOwner={!this.props.router.params.userId}\r\n            profile={this.props.profile}\r\n            status={this.props.status}\r\n            updateStatus={this.props.updateStatus}\r\n            savePhoto={this.props.savePhoto} />\r\n      )\r\n   }\r\n}\r\n\r\nexport const withNavigate = (Component) => {\r\n   let RedirectTo = (props) => {\r\n      return < Component {...props} navigate={useNavigate()} />\r\n   }\r\n   return RedirectTo;\r\n}\r\n\r\n\r\nfunction withRouter(Component) {\r\n   function ComponentWithRouterProp(props) {\r\n      let location = useLocation();\r\n      let navigate = useNavigate();\r\n      let params = useParams();\r\n      return (\r\n         <Component\r\n            {...props}\r\n            router={{ location, navigate, params }}\r\n         />\r\n      );\r\n   }\r\n\r\n   return ComponentWithRouterProp;\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n   profile: state.profilePage.profile,\r\n   status: state.profilePage.status,\r\n   authorizedUserId: state.auth.userId,\r\n   isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default compose(connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto }), withNavigate, withRouter, withAuthNavigate)(ProfileContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\n\r\nlet mapStateToPropsForNavigate = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthNavigate = (Component) => {\r\n    class NavigateComponent extends React.Component {\r\n        render() {\r\n            // if (!this.props.isAuth) return <Navigate to={'/login'} />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n\r\n\r\n    let ConnectedAuthNavigateComponent = connect(mapStateToPropsForNavigate)(NavigateComponent)\r\n\r\n    return ConnectedAuthNavigateComponent;\r\n}"],"names":["props","className","s","src","message","likesCount","MyPosts","React","postsElement","posts","reverse","map","p","AddNewPostReduxForm","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","connect","state","profilePage","dispatch","addPostActionCreator","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","profile","isOwner","savePhoto","Preloader","photos","large","userPhoto","type","target","files","length","ProfileContainer","userId","this","router","params","authorizedUserId","navigate","getUserProfile","getStatus","refreshProfile","prevProps","withNavigate","Component","useNavigate","compose","auth","isAuth","location","useLocation","useParams","withAuthNavigate","mapStateToPropsForNavigate","NavigateComponent"],"sourceRoot":""}